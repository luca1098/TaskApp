[{"/Users/luca/Desktop/todo-app-react/src/index.js":"1","/Users/luca/Desktop/todo-app-react/src/reducer/reducerTodo.js":"2","/Users/luca/Desktop/todo-app-react/src/components/FilterBar/index.js":"3","/Users/luca/Desktop/todo-app-react/src/components/TodoList/index.js":"4","/Users/luca/Desktop/todo-app-react/src/state/index.js":"5","/Users/luca/Desktop/todo-app-react/src/App.js":"6","/Users/luca/Desktop/todo-app-react/src/components/SwitchMode/index.js":"7","/Users/luca/Desktop/todo-app-react/src/theme/index.js":"8","/Users/luca/Desktop/todo-app-react/src/components/AddBar/index.js":"9","/Users/luca/Desktop/todo-app-react/src/components/EmptyTodos/index.js":"10","/Users/luca/Desktop/todo-app-react/src/store/index.js":"11","/Users/luca/Desktop/todo-app-react/src/components/EditTodo/index.js":"12","/Users/luca/Desktop/todo-app-react/src/components/BadgePriority/index.js":"13","/Users/luca/Desktop/todo-app-react/src/action/type.js":"14","/Users/luca/Desktop/todo-app-react/src/theme/GlobalStyle.js":"15","/Users/luca/Desktop/todo-app-react/src/components/Footer/index.js":"16","/Users/luca/Desktop/todo-app-react/src/components/TodoItem/index.js":"17","/Users/luca/Desktop/todo-app-react/src/function/asyncro/index.js":"18","/Users/luca/Desktop/todo-app-react/src/function/index.js":"19","/Users/luca/Desktop/todo-app-react/src/components/ErrorHandler/index.js":"20","/Users/luca/Desktop/todo-app-react/src/components/AppComponent/index.js":"21","/Users/luca/Desktop/todo-app-react/src/components/Loader/index.js":"22"},{"size":551,"mtime":1609698246239,"results":"23","hashOfConfig":"24"},{"size":4184,"mtime":1612790242090,"results":"25","hashOfConfig":"24"},{"size":1864,"mtime":1611066398048,"results":"26","hashOfConfig":"24"},{"size":3397,"mtime":1612790257298,"results":"27","hashOfConfig":"24"},{"size":225,"mtime":1612787578936,"results":"28","hashOfConfig":"24"},{"size":1412,"mtime":1612789658261,"results":"29","hashOfConfig":"24"},{"size":987,"mtime":1612698918721,"results":"30","hashOfConfig":"24"},{"size":515,"mtime":1611062612928,"results":"31","hashOfConfig":"24"},{"size":3231,"mtime":1612790021122,"results":"32","hashOfConfig":"24"},{"size":518,"mtime":1611262571438,"results":"33","hashOfConfig":"24"},{"size":218,"mtime":1612788587583,"results":"34","hashOfConfig":"24"},{"size":2076,"mtime":1612210482343,"results":"35","hashOfConfig":"24"},{"size":1206,"mtime":1612790394861,"results":"36","hashOfConfig":"24"},{"size":99,"mtime":1611066292258,"results":"37","hashOfConfig":"24"},{"size":671,"mtime":1612724399215,"results":"38","hashOfConfig":"24"},{"size":1066,"mtime":1612443759840,"results":"39","hashOfConfig":"24"},{"size":1490,"mtime":1612441695290,"results":"40","hashOfConfig":"24"},{"size":1819,"mtime":1612790101606,"results":"41","hashOfConfig":"24"},{"size":844,"mtime":1612623309768,"results":"42","hashOfConfig":"24"},{"size":1651,"mtime":1612789953953,"results":"43","hashOfConfig":"24"},{"size":971,"mtime":1612787900084,"results":"44","hashOfConfig":"24"},{"size":2282,"mtime":1612725857233,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"f8jsty",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/luca/Desktop/todo-app-react/src/index.js",[],["98","99"],"/Users/luca/Desktop/todo-app-react/src/reducer/reducerTodo.js",["100"],"/Users/luca/Desktop/todo-app-react/src/components/FilterBar/index.js",["101"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { setFilterState } from '../../reducer/reducerTodo'\n\n\n\n\n\nexport const FilterBar = () => {\n\n  \n    return(\n        <FlexFliter>\n            <FilterButton label=\"All\"  filterName='Tutti'/>\n            <FilterButton label=\"Todo\" filterName='Da fare'/>\n            <FilterButton label=\"Done\" filterName='Fatti' />\n        </FlexFliter>\n    )\n}\n\n\nconst FilterButton = (props) => {\n    let {label, filterName} = props\n    const filterStatus = useSelector(state => state.activeFilter)\n    let dispatch = useDispatch()\n    const [activeFilter, setActiveFilter] = useState(true)\n    let labelType = label.toUpperCase();\n\n\n    useEffect(()=>{\n        \n            if (filterStatus === labelType) {\n                setActiveFilter(true)\n            } else{\n                setActiveFilter(false)\n            }\n            \n    }, [filterStatus])\n     \n\n    const handleFilter = () => {\n        dispatch(setFilterState(labelType))\n    }\n    return(\n        <StyledButton onClick={handleFilter}\n                        active={activeFilter}\n                        label={label}\n                        >\n                            {filterName}\n        </StyledButton>\n    )\n}\nconst FlexFliter =styled.div`\n    display:flex;\n    align-items:center;\n    justify-content:center;\n\n    \n`\nconst StyledButton = styled.button`\n        margin: 0 .3rem;\n        cursor:pointer;\n        transition: ${props => props.theme.transition};\n        background:${props => props.active ? props.theme.filterButtonActive : props.theme.filterButton};\n        color:${props => props.theme.text};\n        border:none;\n        padding: .5rem 1rem;\n        border-radius:50px;\n            &:focus{\n                outline:none;\n            }\n    `\n",["102","103"],"/Users/luca/Desktop/todo-app-react/src/components/TodoList/index.js",["104","105"],"import React  from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport { ChangeTodoStatus, deleteTask, RemovePriorityAsnc } from '../../function/asyncro'\nimport { getOpenTools, \n        getEditable, \n        removePriority} from '../../reducer/reducerTodo'\nimport { mediaQueries } from '../../theme/MediaQueries'\nimport { EmptyTodos } from '../EmptyTodos'\nimport { TodoItem } from '../TodoItem'\n\nexport const TodoList = (props) => {\n    let {todos, filterStatus} = props\n  \n    return(\n        <>\n        {todos.length == 0 && <EmptyTodos filterStatus={filterStatus} />}\n        <TodoContainer>\n            {todos && todos.map(todo => <Todo key={todo.id} todo={todo}/>)}\n        </TodoContainer>\n        </>\n    )\n}\n\n\nconst Todo = ({todo}) =>{\n    let dispatch = useDispatch()\n    let payload = {\n        url : \"http://localhost:3001/todos\",\n        todo \n    }\n\n    const HandleCheck = () => {\n       \n        dispatch(ChangeTodoStatus(payload))\n        if (todo.order) {\n                 dispatch(RemovePriorityAsnc(payload))\n        }\n    }\n    \n    return(\n        <TodoItemWrap> \n           <TodoItem todo={todo} \n                     onClick={HandleCheck}\n                     editable={todo.editable}\n                     openTools={todo.opentool}\n                    />\n\n\n            <EditBlock todo={todo} />\n        </TodoItemWrap>\n    )\n}\n\n\n\nconst EditBlock = ({todo}) => {\n    let dispatch = useDispatch()\n    let payload = {\n        url: 'http://localhost:3001/todos',\n        task : todo\n    }\n    //delete todo\n    const RemoveTodoFuncion = () => {\n        dispatch(deleteTask(payload))\n    }\n    //open input editable\n    const HandleEditable = () => {\n        dispatch(getEditable( todo.id))\n    }\n    //open tools\n    const HandleEdit = () => {\n        dispatch(getOpenTools(todo.id))\n    }\n\n    return(\n        <FlexIcon>\n        { todo.opentool && \n            <FlexIcon>\n                <IconEdit className=\"fas fa-edit\" \n                        onClick={HandleEditable}\n                        />\n                 <IconEdit className=\"fas fa-trash-alt\" \n                            onClick={RemoveTodoFuncion}\n                            /> \n                        \n            </FlexIcon>\n             } \n            <IconEdit className=\"fas fa-ellipsis-v\"\n                        onClick={HandleEdit} \n                        active={todo.opentool}\n                        />\n         \n        </FlexIcon>\n    )\n}\n\nconst TodoContainer = styled.ul`\n    background:${props => props.theme.main};\n    padding:0 1rem;\n    border-radius: 7px\n`\n\nconst TodoItemWrap = styled.li`\n    display:flex;\n    justify-content:space-between;\n    align-items:center:\n    list-style:none;\n    padding:.8rem 1rem;\n    &:not(:last-child){\n        border-bottom: 1px solid #ccc;\n    };\n    ${mediaQueries('sm')`\n        align-items:flex-start;\n    `}\n`\n\nconst FlexIcon = styled.div`\n    display:flex;\n    align-items:center;\n    color: ${props => props.theme.text};\n    ${mediaQueries('sm')`\n\n        flex-direction:column-reverse;\n    `}\n`\nconst IconEdit = styled.i`\n    width:35px;\n    height:30px;\n    align-items:center;\n    justify-content:center;\n    display:flex;\n    cursor:pointer;\n    transition:all .2s ease-in-out;\n    transform: ${props => props.active ? 'rotate(-90deg)' : 'rotate(0)' };\n    &:active{\n        transform:scale(.9)\n    }\n`","/Users/luca/Desktop/todo-app-react/src/state/index.js",[],"/Users/luca/Desktop/todo-app-react/src/App.js",["106"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SwitchMode } from './components/SwitchMode';\nimport { Footer } from './components/Footer'\nimport { GlobalStyle } from './theme/GlobalStyle'\nimport styled, { ThemeProvider } from 'styled-components';\nimport { darkMode, lightMode } from './theme';\nimport { fetchEndpoint } from './function/asyncro'\nimport { ServerError } from './components/ErrorHandler';\nimport { changeTheme } from './reducer/reducerTodo';\nimport { AppComponent } from './components/AppComponent';\n\n\n\n\nfunction App() {\n  let state = useSelector(state => state)\n  let dispatch = useDispatch()\n  let theme  = state.theme;\n  let mode = localStorage.getItem('mode') \n  let modStatus = mode !== null ? mode : theme\n\n\nuseEffect(()=>{\n    dispatch(fetchEndpoint('http://localhost:3001/todos')) \n    dispatch(changeTheme(mode))\n  },[])\n\n  return (\n\n      <ThemeProvider theme={modStatus === 'light' ? lightMode : darkMode}>\n        <GlobalStyle />\n        <Container>\n          <SwitchMode mode={modStatus}/>\n          <h1>👓 Organizza la tua giornata!</h1>\n          {state.serverError ? <ServerError message={state.serverError}/> :  <AppComponent />}         \n          <Footer />\n        </Container>\n      </ThemeProvider>\n\n  );\n}\n\nconst Container = styled.div  `\n  width: 80%;\n  margin: 0 auto;\n  position:relative;\n`\n\n\nexport default App;\n",["107","108"],"/Users/luca/Desktop/todo-app-react/src/components/SwitchMode/index.js",[],"/Users/luca/Desktop/todo-app-react/src/theme/index.js",[],"/Users/luca/Desktop/todo-app-react/src/components/AddBar/index.js",[],"/Users/luca/Desktop/todo-app-react/src/components/EmptyTodos/index.js",[],"/Users/luca/Desktop/todo-app-react/src/store/index.js",[],"/Users/luca/Desktop/todo-app-react/src/components/EditTodo/index.js",[],"/Users/luca/Desktop/todo-app-react/src/components/BadgePriority/index.js",[],"/Users/luca/Desktop/todo-app-react/src/action/type.js",[],["109","110"],"/Users/luca/Desktop/todo-app-react/src/theme/GlobalStyle.js",[],"/Users/luca/Desktop/todo-app-react/src/components/Footer/index.js",[],["111","112"],"/Users/luca/Desktop/todo-app-react/src/components/TodoItem/index.js",[],"/Users/luca/Desktop/todo-app-react/src/function/asyncro/index.js",[],"/Users/luca/Desktop/todo-app-react/src/function/index.js",[],"/Users/luca/Desktop/todo-app-react/src/components/ErrorHandler/index.js",["113"],"/Users/luca/Desktop/todo-app-react/src/components/AppComponent/index.js",[],"/Users/luca/Desktop/todo-app-react/src/components/Loader/index.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":75,"column":62,"nodeType":"120","messageId":"121","endLine":75,"endColumn":64},{"ruleId":"122","severity":1,"message":"123","line":39,"column":8,"nodeType":"124","endLine":39,"endColumn":22,"suggestions":"125"},{"ruleId":"114","replacedBy":"126"},{"ruleId":"116","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":7,"column":9,"nodeType":"130","messageId":"131","endLine":7,"endColumn":23},{"ruleId":"118","severity":1,"message":"132","line":17,"column":23,"nodeType":"120","messageId":"121","endLine":17,"endColumn":25},{"ruleId":"122","severity":1,"message":"133","line":27,"column":5,"nodeType":"124","endLine":27,"endColumn":7,"suggestions":"134"},{"ruleId":"114","replacedBy":"135"},{"ruleId":"116","replacedBy":"136"},{"ruleId":"114","replacedBy":"137"},{"ruleId":"116","replacedBy":"138"},{"ruleId":"114","replacedBy":"139"},{"ruleId":"116","replacedBy":"140"},{"ruleId":"128","severity":1,"message":"141","line":8,"column":9,"nodeType":"130","messageId":"131","endLine":8,"endColumn":17},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'labelType'. Either include it or remove the dependency array.","ArrayExpression",["144"],["142"],["143"],"no-unused-vars","'removePriority' is defined but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'dispatch' and 'mode'. Either include them or remove the dependency array.",["145"],["142"],["143"],["142"],["143"],["142"],["143"],"'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [filterStatus, labelType]",{"range":"150","text":"151"},"Update the dependencies array to be: [dispatch, mode]",{"range":"152","text":"153"},[971,985],"[filterStatus, labelType]",[897,899],"[dispatch, mode]"]